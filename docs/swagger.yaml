basePath: /api/v1
definitions:
  models.AddAlbum:
    properties:
      artist:
        type: string
      price:
        type: number
      title:
        type: string
    type: object
  models.Album:
    properties:
      _id:
        type: string
      artist:
        type: string
      created_at:
        type: string
      price:
        type: number
      title:
        type: string
      updated_at:
        type: string
    required:
    - artist
    - price
    - title
    type: object
  models.ErrorMessage:
    properties:
      error:
        type: string
    type: object
  models.SuccessMessage:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Album microservice server.
  title: REST API
  version: "1.0"
paths:
  /albums:
    get:
      consumes:
      - application/json
      description: get albums
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Album'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      summary: Get all albums
      tags:
      - albums
    post:
      consumes:
      - application/json
      description: add album by json
      parameters:
      - description: Add Album
        in: body
        name: album
        required: true
        schema:
          $ref: '#/definitions/models.AddAlbum'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Album'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      security:
      - bearer: []
      summary: Add an album
      tags:
      - albums
  /albums/{id}:
    delete:
      consumes:
      - application/json
      description: Delete by album ID
      parameters:
      - description: Album ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      summary: Delete an albums
      tags:
      - albums
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Album ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Album'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      summary: Get an album
      tags:
      - albums
    patch:
      consumes:
      - application/json
      description: Update by json album
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Album
        in: body
        name: album
        required: true
        schema:
          $ref: '#/definitions/models.AddAlbum'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      summary: Update an album
      tags:
      - albums
schemes:
- http
- https
securityDefinitions:
  bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
